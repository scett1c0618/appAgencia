@{
    ViewData["Title"] = "Pago";
    var reservas = ViewBag.Reservas as List<app1.Models.Reserva>;
}
<h2>Pago</h2>
<div class="row">
    <div class="col-md-8">
        <form asp-action="Pagar" method="post" id="formPago">
            <div class="mb-3">
                <label class="form-label">Número de tarjeta</label>
                <input type="text" name="NumeroTarjeta" id="NumeroTarjeta" class="form-control" maxlength="19" pattern="[0-9 ]{19}" required autocomplete="off" />
                <div class="invalid-feedback" id="msgNumTarjeta"></div>
            </div>
            <div class="mb-3">
                <label class="form-label">Nombre y apellido</label>
                <input type="text" name="NombreApellido" class="form-control" required />
            </div>
            <div class="mb-3">
                <label class="form-label">Fecha de vencimiento</label>
                <input type="text" name="FechaVencimiento" id="FechaVencimiento" class="form-control" maxlength="5" placeholder="MM/AA" required autocomplete="off" />
                <div class="invalid-feedback" id="msgVencimiento"></div>
            </div>
            <div class="mb-3">
                <label class="form-label">Código de seguridad (CVV)</label>
                <input type="text" name="CVV" class="form-control" maxlength="4" pattern="\d{3,4}" required autocomplete="off" />
            </div>
            <div class="mb-3">
                <label class="form-label">DNI</label>
                <input type="text" name="DNI" id="DNI" class="form-control" maxlength="8" pattern="\d{8}" required autocomplete="off" />
                <div class="invalid-feedback" id="msgDNI"></div>
            </div>
            <button type="submit" class="btn btn-success mt-3 w-100" id="btnPagar" disabled>Pagar</button>
        </form>
    </div>
    <div class="col-md-4">
        <h5>Resumen de compra</h5>
        <ul class="list-group mb-3">
            @foreach (var r in reservas)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @r.Viaje?.Titulo <span>x@r.Cantidad</span>
                </li>
            }
        </ul>
        <div class="mb-3"><strong>Total: S/ @reservas?.Sum(r => r.Cantidad * (r.Viaje?.Precio ?? 0)).ToString("N2")</strong></div>
    </div>
</div>
@section Scripts {
    <script>
        // Formato número de tarjeta
        const numTarjeta = document.getElementById('NumeroTarjeta');
        numTarjeta.addEventListener('input', function(e) {
            let val = this.value.replace(/\D/g, '').substring(0, 16);
            let formatted = val.replace(/(.{4})/g, '$1 ').trim();
            this.value = formatted;
            document.getElementById('msgNumTarjeta').textContent = (formatted.length === 19) ? '' : 'Debe ingresar 16 dígitos';
        });
        // Formato y validación fecha vencimiento
        const fechaVenc = document.getElementById('FechaVencimiento');
        fechaVenc.addEventListener('input', function(e) {
            let val = this.value.replace(/\D/g, '').substring(0, 4);
            if (val.length > 2) val = val.substring(0,2) + '/' + val.substring(2);
            this.value = val;
            validarVencimiento();
        });
        function validarVencimiento() {
            const msg = document.getElementById('msgVencimiento');
            const val = fechaVenc.value;
            if (!/^\d{2}\/\d{2}$/.test(val)) {
                msg.textContent = 'Formato inválido (MM/AA)';
                return false;
            }
            const [mes, anio] = val.split('/').map(Number);
            const hoy = new Date();
            const anioActual = hoy.getFullYear() % 100;
            const mesActual = hoy.getMonth() + 1;
            if (anio < anioActual || anio > anioActual + 20) {
                msg.textContent = 'Año inválido';
                return false;
            }
            if (anio === anioActual && mes < mesActual) {
                msg.textContent = 'Ingrese una fecha válida';
                return false;
            }
            if (mes < 1 || mes > 12) {
                msg.textContent = 'Mes inválido';
                return false;
            }
            msg.textContent = '';
            return true;
        }
        // Validación DNI
        const dni = document.getElementById('DNI');
        dni.addEventListener('input', function() {
            let val = this.value.replace(/\D/g, '').substring(0,8);
            this.value = val;
            document.getElementById('msgDNI').textContent = (val.length === 8) ? '' : 'Debe ingresar 8 dígitos';
        });
        // Habilitar botón pagar solo si todo es válido
        const form = document.getElementById('formPago');
        const btn = document.getElementById('btnPagar');
        form.addEventListener('input', function() {
            let valid = true;
            form.querySelectorAll('input[required]').forEach(input => {
                if (!input.value.trim()) valid = false;
            });
            if (numTarjeta.value.replace(/\D/g, '').length !== 16) valid = false;
            if (!validarVencimiento()) valid = false;
            if (dni.value.length !== 8) valid = false;
            btn.disabled = !valid;
        });
    </script>
}
